rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write to any document within their own user data path.
    match /users/{userId}/{document=**} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Explicitly allow access to the user document itself as well.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public libraries are readable by any authenticated user.
    match /exerciseLibrary/{docId} {
      allow read: if request.auth != null;
      allow write: if false; 
    }
    match /foods/{docId} {
      allow read, write: if request.auth != null;
    }

    // Allow each user to read/write their own profile
    match /userProfile/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow each user to read/write their own exercise logs
    match /exerciseLogs/{logId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Allow users to create and read their own exercise submissions
    match /exerciseSubmissions/{submissionId} {
      allow create: if request.auth != null && request.resource.data.submittedBy == request.auth.uid;
      allow read: if request.auth != null && resource.data.submittedBy == request.auth.uid;
      // Optionally, allow admin to read all submissions
      allow read: if request.auth != null && (request.auth.token.admin == true || request.auth.token.email == 'timdug4@gmail.com');
      // Only admin can update/delete
      allow update, delete: if request.auth != null && (request.auth.token.admin == true || request.auth.token.email == 'timdug4@gmail.com');
    }
  }
}
